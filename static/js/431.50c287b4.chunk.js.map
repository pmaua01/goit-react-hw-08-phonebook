{"version":3,"file":"static/js/431.50c287b4.chunk.js","mappings":"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","sources":["redax/selectors.js","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/Filter/Filer.styles.js","components/Filter/Filter.jsx","components/Pages/PhonebookPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filters;\n\n// export const selectVisibleContacts = state => {\n//   const contacts = selectContacts(state);\n//   const filter = selectFilter(state);\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const FormPhoneBook = styled.form`\n  border: 1px solid black;\n  width: 400px;\n  padding-left: 10px;\n`;\n\nexport const FormLabel = styled.label`\n  width: 200px;\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 25px;\n  margin-bottom: 15px;\n\n  }\n`;\n\nexport const FormInput = styled.input`\n  display: flex;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  &:hover,\n  &:focus {\n    outline: 1px solid #00bfff;\n    border-color: #00bfff;\n  }\n`;\n\nexport const FormButton = styled.button`\n  margin-bottom: 15px;\n  border-radius: 4px;\n  background-color: white;\n  border: 1px solid black;\n  &:active {\n    background-color: red;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport {\n  FormPhoneBook,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './Phonebook.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\n// import { addContacts } from 'redax/contactSlice';\nimport { selectContacts } from 'redax/selectors';\n\nimport { addContact } from 'redax/operation';\n\nexport const Phonebook = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChangeInput = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = e => {\n    // const numberContact = { name, number };\n    e.preventDefault();\n    for (const element of contacts) {\n      if (element.name.toLowerCase() === name.toLowerCase()) {\n        alert(`${element.name} is alrady in contacts`);\n        return;\n      }\n    }\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormPhoneBook onSubmit={onSubmit}>\n      <FormLabel>\n        Name:\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={onChangeInput}\n        />\n      </FormLabel>\n      <FormLabel>\n        Number:\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={onChangeInput}\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </FormPhoneBook>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  font-size: 20px;\n  padding: 0;\n`;\n\nexport const ContactsItem = styled.li`\n  width: 350px;\n  display: flex;\n  margin-bottom: 10px;\n  padding:0\n  aligin-item: center;\n  justify-content: space-between;\n`;\n\nexport const ContactsButton = styled.button`\n  border-radius: 4px;\n  background-color: white;\n  border: 1px solid black;\n  &:active {\n    background-color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactsList, ContactsItem, ContactsButton } from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../redax/operation';\n\nimport {\n  // selectContacts,\n  // selectFilter,\n  selectVisibleContacts,\n} from '../../redax/selectors';\n\nexport const Contacts = () => {\n  // const contacts = useSelector(selectContacts);\n  // const filter = useSelector(selectFilter);\n  // console.log('contacts:', contacts);\n  const dispatch = useDispatch();\n\n  const visible = useSelector(selectVisibleContacts);\n\n  const handeleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  // const visibleContacts = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filter.toLowerCase())\n  // );\n\n  return (\n    <ContactsList>\n      {visible.map(contact => {\n        return (\n          <ContactsItem key={contact.id}>\n            {contact.name}:{contact.number}\n            <ContactsButton\n              id={contact.id}\n              type=\"button\"\n              onClick={() => handeleDelete(contact.id)}\n            >\n              Delete\n            </ContactsButton>\n          </ContactsItem>\n        );\n      })}\n    </ContactsList>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  width: 300px;\n  font-size: 20px;\n  flex-wrap: wrap;\n  display: flex;\n  aligin-items: center;\n`;\n\nexport const FilterInput = styled.input`\n  display: flex;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  margin-top: 10px;\n  &:hover,\n  &:focus {\n    outline: 1px solid #00bfff;\n    border-color: #00bfff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FilterLabel, FilterInput } from './Filer.styles';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redax/filterContactSlice';\n\nexport const Filter = () => {\n  const filtersValue = useSelector(state => state.filters);\n  const dispatch = useDispatch();\n  const onHandleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by Name\n      <FilterInput\n        type=\"text\"\n        value={filtersValue}\n        onChange={onHandleChange}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { selectContacts, selectIsLoading, selectError } from 'redax/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redax/operation';\n\nexport default function PhonebookPage() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        width: 720,\n        margin: 'auto',\n        fontSize: 30,\n      }}\n    >\n      <h1>Phonebook</h1>\n      <Phonebook></Phonebook>\n      {contacts.length > 0 && <h2>Contacts</h2>}\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length > 0 && <Filter />}\n      {contacts.length > 0 && <Contacts />}\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filters","filter","contact","name","toLowerCase","includes","FormPhoneBook","styled","FormLabel","FormInput","FormButton","Phonebook","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","onChangeInput","e","currentTarget","value","onSubmit","preventDefault","element","alert","addContact","type","pattern","title","required","onChange","ContactsList","ContactsItem","ContactsButton","Contacts","visible","map","id","onClick","deleteContact","FilterLabel","FilterInput","Filter","filtersValue","setFilter","PhonebookPage","useEffect","fetchContacts","style","width","margin","fontSize","length"],"sourceRoot":""}