{"version":3,"file":"static/js/431.e592721a.chunk.js","mappings":"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","sources":["redax/selectors.js","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/Filter/Filer.styles.js","components/Filter/Filter.jsx","components/Pages/PhonebookPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filters;\n\n// export const selectVisibleContacts = state => {\n//   const contacts = selectContacts(state);\n//   const filter = selectFilter(state);\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const FormPhoneBook = styled.form`\n  // border: 1px solid black;\n  // width: 400px;\n  // padding-left: 10px;\n`;\n\nexport const FormLabel = styled.label`\n  width: 200px;\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 25px;\n  margin-bottom: 15px;\n\n  }\n`;\n\nexport const FormInput = styled.input`\n  display: flex;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  &:hover,\n  &:focus {\n    outline: 1px solid #00bfff;\n    border-color: #00bfff;\n  }\n`;\n\nexport const FormButton = styled.button`\n  margin-bottom: 15px;\n  border-radius: 4px;\n  background-color: white;\n  border: 1px solid black;\n  &:active {\n    background-color: red;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport {\n  FormPhoneBook,\n  FormLabel,\n  // FormInput,\n  // FormButton,\n} from './Phonebook.styled';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nimport { useSelector, useDispatch } from 'react-redux';\n// import { addContacts } from 'redax/contactSlice';\nimport { selectContacts } from 'redax/selectors';\n\nimport { addContact } from 'redax/operation';\n\nexport const Phonebook = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChangeInput = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = e => {\n    // const numberContact = { name, number };\n    e.preventDefault();\n    for (const element of contacts) {\n      if (element.name.toLowerCase() === name.toLowerCase()) {\n        alert(`${element.name} is alrady in contacts`);\n        return;\n      }\n    }\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormPhoneBook onSubmit={onSubmit}>\n      <FormLabel>\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={onChangeInput}\n        />\n      </FormLabel>\n      <FormLabel>\n        <TextField\n          label=\"Number\"\n          variant=\"outlined\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={onChangeInput}\n        />\n      </FormLabel>\n      <Button variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </FormPhoneBook>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  font-size: 20px;\n  padding: 0;\n`;\n\nexport const ContactsItem = styled.li`\n  width: 350px;\n  display: flex;\n  margin-bottom: 10px;\n  padding:0\n  aligin-item: center;\n  justify-content: space-between;\n`;\n\nexport const ContactsButton = styled.button`\n  border-radius: 4px;\n  background-color: white;\n  border: 1px solid black;\n  &:active {\n    background-color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactsList, ContactsItem } from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../redax/operation';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport {\n  // selectContacts,\n  // selectFilter,\n  selectVisibleContacts,\n} from '../../redax/selectors';\n\nimport Button from '@mui/material/Button';\n\nexport const Contacts = () => {\n  // const contacts = useSelector(selectContacts);\n  // const filter = useSelector(selectFilter);\n  // console.log('contacts:', contacts);\n  const dispatch = useDispatch();\n\n  const visible = useSelector(selectVisibleContacts);\n\n  const handeleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  // const visibleContacts = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filter.toLowerCase())\n  // );\n\n  return (\n    <ContactsList>\n      {visible.map(contact => {\n        return (\n          <ContactsItem key={contact.id}>\n            {contact.name}:{contact.number}\n            <Button\n              color=\"error\"\n              size=\"small\"\n              startIcon={<DeleteIcon />}\n              variant=\"contained\"\n              id={contact.id}\n              type=\"button\"\n              onClick={() => handeleDelete(contact.id)}\n            >\n              Delete\n            </Button>\n          </ContactsItem>\n        );\n      })}\n    </ContactsList>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  width: 300px;\n  font-size: 20px;\n  flex-wrap: wrap;\n  display: flex;\n  aligin-items: center;\n`;\n\nexport const FilterInput = styled.input`\n  display: flex;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  margin-top: 10px;\n  &:hover,\n  &:focus {\n    outline: 1px solid #00bfff;\n    border-color: #00bfff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FilterLabel } from './Filer.styles';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redax/filterContactSlice';\n\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n  const filtersValue = useSelector(state => state.filters);\n  const dispatch = useDispatch();\n  const onHandleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      <TextField\n        label=\"Find contacts by Name\"\n        variant=\"outlined\"\n        type=\"text\"\n        value={filtersValue}\n        onChange={onHandleChange}\n      ></TextField>\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { selectContacts, selectIsLoading, selectError } from 'redax/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redax/operation';\n\nexport default function PhonebookPage() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        width: 720,\n        margin: 'auto',\n        fontSize: 30,\n      }}\n    >\n      <h1>Phonebook</h1>\n      <Phonebook></Phonebook>\n      {contacts.length > 0 && <h2>Contacts</h2>}\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length > 0 && <Filter />}\n      {contacts.length > 0 && <Contacts />}\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filters","filter","contact","name","toLowerCase","includes","FormPhoneBook","styled","FormLabel","Phonebook","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","onChangeInput","e","currentTarget","value","onSubmit","preventDefault","element","alert","addContact","TextField","label","variant","type","pattern","title","required","onChange","Button","ContactsList","ContactsItem","Contacts","visible","map","color","size","startIcon","Delete","id","onClick","deleteContact","FilterLabel","Filter","filtersValue","setFilter","PhonebookPage","useEffect","fetchContacts","style","width","margin","fontSize","length"],"sourceRoot":""}